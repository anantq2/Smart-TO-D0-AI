"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/ai-service.ts":
/*!***************************!*\
  !*** ./lib/ai-service.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AITaskService: function() { return /* binding */ AITaskService; }\n/* harmony export */ });\n/* harmony import */ var _lib_openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/openai */ \"(app-pages-browser)/./lib/openai.ts\");\n\nconst messages = [\n    {\n        role: \"system\",\n        content: \"You are a helpful assistant.\"\n    },\n    {\n        role: \"user\",\n        content: \"Suggest a deadline for writing project report.\"\n    }\n];\nasync function getSuggestion() {\n    return await (0,_lib_openai__WEBPACK_IMPORTED_MODULE_0__.getLLMSuggestions)(messages);\n}\nclass AITaskService {\n    static analyzeKeywords(text) {\n        const urgentKeywords = [\n            \"urgent\",\n            \"asap\",\n            \"immediately\",\n            \"emergency\",\n            \"critical\",\n            \"deadline\",\n            \"due\"\n        ];\n        const workKeywords = [\n            \"meeting\",\n            \"project\",\n            \"presentation\",\n            \"client\",\n            \"office\",\n            \"report\",\n            \"proposal\"\n        ];\n        const personalKeywords = [\n            \"doctor\",\n            \"family\",\n            \"grocery\",\n            \"workout\",\n            \"vacation\",\n            \"birthday\",\n            \"personal\"\n        ];\n        const healthKeywords = [\n            \"exercise\",\n            \"gym\",\n            \"medical\",\n            \"appointment\",\n            \"health\",\n            \"fitness\",\n            \"doctor\"\n        ];\n        const learningKeywords = [\n            \"study\",\n            \"course\",\n            \"learn\",\n            \"research\",\n            \"book\",\n            \"tutorial\",\n            \"training\"\n        ];\n        const financeKeywords = [\n            \"budget\",\n            \"money\",\n            \"bank\",\n            \"payment\",\n            \"invoice\",\n            \"tax\",\n            \"financial\"\n        ];\n        const homeKeywords = [\n            \"clean\",\n            \"repair\",\n            \"maintenance\",\n            \"garden\",\n            \"home\",\n            \"house\",\n            \"kitchen\"\n        ];\n        const found = [];\n        const lowerText = text.toLowerCase();\n        if (urgentKeywords.some((k)=>lowerText.includes(k))) found.push(\"urgent\");\n        if (workKeywords.some((k)=>lowerText.includes(k))) found.push(\"work\");\n        if (personalKeywords.some((k)=>lowerText.includes(k))) found.push(\"personal\");\n        if (healthKeywords.some((k)=>lowerText.includes(k))) found.push(\"health\");\n        if (learningKeywords.some((k)=>lowerText.includes(k))) found.push(\"learning\");\n        if (financeKeywords.some((k)=>lowerText.includes(k))) found.push(\"finance\");\n        if (homeKeywords.some((k)=>lowerText.includes(k))) found.push(\"home\");\n        return found;\n    }\n    static async analyzeTask(title) {\n        let description = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", contextEntries = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];\n        const contextText = contextEntries.map((entry, i)=>\"Context \".concat(i + 1, \": \").concat(entry.content)).join(\"\\n\");\n        const systemPrompt = \"You are an intelligent task assistant. Given a task title, description, and user context, return a JSON object with AI analysis.\";\n        const userPrompt = \"\\nTitle: \".concat(title, \"\\nDescription: \").concat(description, \"\\nUser Context:\\n\").concat(contextText, '\\n\\nReturn the following JSON format:\\n{\\n  \"priority\": { \"score\": 1-5, \"reasoning\": \"...\", \"confidence\": 0-1 },\\n  \"deadline\": { \"suggested\": \"ISO date string\", \"reasoning\": \"...\", \"confidence\": 0-1 },\\n  \"category\": { \"suggested\": \"...\", \"reasoning\": \"...\", \"confidence\": 0-1 },\\n  \"enhancedDescription\": { \"description\": \"...\", \"reasoning\": \"...\", \"confidence\": 0-1 },\\n  \"complexity\": { \"score\": 1-10, \"reasoning\": \"...\", \"confidence\": 0-1 },\\n  \"estimatedDuration\": { \"minutes\": 0-600, \"reasoning\": \"...\", \"confidence\": 0-1 }\\n}\\n');\n        const completion = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: userPrompt\n                }\n            ],\n            temperature: 0.7\n        });\n        const raw = completion.choices[0].message.content;\n        const json = JSON.parse(raw || \"{}\");\n        return json;\n    }\n    static async generateTaskSuggestions(contextEntries) {\n        await new Promise((res)=>setTimeout(res, 800));\n        const suggestions = [];\n        contextEntries.slice(0, 5).forEach((entry)=>{\n            const keywords = this.analyzeKeywords(entry.content);\n            const content = entry.content.toLowerCase();\n            if (content.includes(\"meeting\")) {\n                suggestions.push({\n                    title: \"Prepare for upcoming meeting\",\n                    description: 'Based on context: \"'.concat(entry.content.substring(0, 50), '...\"'),\n                    priority: 4,\n                    category: keywords.includes(\"work\") ? \"Work\" : \"Personal\",\n                    reasoning: \"Meeting reference detected in context\"\n                });\n            }\n            if (content.includes(\"appointment\")) {\n                suggestions.push({\n                    title: \"Schedule appointment\",\n                    description: 'Follow up on: \"'.concat(entry.content.substring(0, 50), '...\"'),\n                    priority: 3,\n                    category: keywords.includes(\"health\") ? \"Health\" : \"Personal\",\n                    reasoning: \"Appointment mentioned in context\"\n                });\n            }\n            if (content.includes(\"deadline\") || content.includes(\"due\")) {\n                suggestions.push({\n                    title: \"Work on deadline item\",\n                    description: 'Address: \"'.concat(entry.content.substring(0, 50), '...\"'),\n                    priority: 5,\n                    category: \"Work\",\n                    reasoning: \"Deadline detected in context\"\n                });\n            }\n            if (content.includes(\"budget\") || content.includes(\"payment\")) {\n                suggestions.push({\n                    title: \"Handle financial task\",\n                    description: 'Review: \"'.concat(entry.content.substring(0, 50), '...\"'),\n                    priority: 4,\n                    category: \"Finance\",\n                    reasoning: \"Financial task detected in context\"\n                });\n            }\n            if (content.includes(\"learn\") || content.includes(\"study\")) {\n                suggestions.push({\n                    title: \"Learning activity\",\n                    description: 'Study: \"'.concat(entry.content.substring(0, 50), '...\"'),\n                    priority: 3,\n                    category: \"Learning\",\n                    reasoning: \"Learning opportunity detected in context\"\n                });\n            }\n        });\n        return suggestions.slice(0, 3);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/ai-service.ts\n"));

/***/ })

});